"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5288],{9067:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"middleware/csrf","title":"CSRF","description":"CSRF middleware","source":"@site/docs/middleware/csrf.md","sourceDirName":"middleware","slug":"/middleware/csrf","permalink":"/docs/middleware/csrf","draft":false,"unlisted":false,"editUrl":"https://github.com/labstack/echox/blob/master/website/docs/middleware/csrf.md","tags":[],"version":"current","frontMatter":{"description":"CSRF middleware"},"sidebar":"docsSidebar","previous":{"title":"CORS","permalink":"/docs/middleware/cors"},"next":{"title":"Decompress","permalink":"/docs/middleware/decompress"}}');var t=o(4848),s=o(8453);const a={description:"CSRF middleware"},r="CSRF",c={},l=[{value:"Usage",id:"usage",level:2},{value:"Custom Configuration",id:"custom-configuration",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Accessing CSRF Token",id:"accessing-csrf-token",level:2},{value:"Server-side",id:"server-side",level:3},{value:"Client-side",id:"client-side",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:3}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"csrf",children:"CSRF"})}),"\n",(0,t.jsx)(n.p,{children:"Cross-site request forgery, also known as one-click attack or session riding and\nabbreviated as CSRF (sometimes pronounced sea-surf) or XSRF, is a type of malicious\nexploit of a website where unauthorized commands are transmitted from a user that\nthe website trusts."}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"e.Use(middleware.CSRF())\n"})}),"\n",(0,t.jsx)(n.h2,{id:"custom-configuration",children:"Custom Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'e := echo.New()\ne.Use(middleware.CSRFWithConfig(middleware.CSRFConfig{\n  TokenLookup: "header:X-XSRF-TOKEN",\n}))\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Example above uses ",(0,t.jsx)(n.code,{children:"X-XSRF-TOKEN"})," request header to extract CSRF token."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Example Configuration that reads token from Cookie"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'middleware.CSRFWithConfig(middleware.CSRFConfig{\n\tTokenLookup:    "cookie:_csrf",\n\tCookiePath:     "/",\n\tCookieDomain:   "example.com",\n\tCookieSecure:   true,\n\tCookieHTTPOnly: true,\n\tCookieSameSite: http.SameSiteStrictMode,\n})\n'})}),"\n",(0,t.jsx)(n.h2,{id:"accessing-csrf-token",children:"Accessing CSRF Token"}),"\n",(0,t.jsx)(n.h3,{id:"server-side",children:"Server-side"}),"\n",(0,t.jsxs)(n.p,{children:["CSRF token can be accessed from ",(0,t.jsx)(n.code,{children:"Echo#Context"})," using ",(0,t.jsx)(n.code,{children:"ContextKey"})," and passed to\nthe client via template."]}),"\n",(0,t.jsx)(n.h3,{id:"client-side",children:"Client-side"}),"\n",(0,t.jsx)(n.p,{children:"CSRF token can be accessed from CSRF cookie."}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'CSRFConfig struct {\n  // Skipper defines a function to skip middleware.\n  Skipper Skipper\n\n  // TokenLength is the length of the generated token.\n  TokenLength uint8 `json:"token_length"`\n  // Optional. Default value 32.\n\n  // TokenLookup is a string in the form of "<source>:<key>" that is used\n  // to extract token from the request.\n  // Optional. Default value "header:X-CSRF-Token".\n  // Possible values:\n  // - "header:<name>"\n  // - "form:<name>"\n  // - "query:<name>"\n  // - "cookie:<name>"\n  TokenLookup string `json:"token_lookup"`\n\n  // Context key to store generated CSRF token into context.\n  // Optional. Default value "csrf".\n  ContextKey string `json:"context_key"`\n\n  // Name of the CSRF cookie. This cookie will store CSRF token.\n  // Optional. Default value "_csrf".\n  CookieName string `json:"cookie_name"`\n\n  // Domain of the CSRF cookie.\n  // Optional. Default value none.\n  CookieDomain string `json:"cookie_domain"`\n\n  // Path of the CSRF cookie.\n  // Optional. Default value none.\n  CookiePath string `json:"cookie_path"`\n\n  // Max age (in seconds) of the CSRF cookie.\n  // Optional. Default value 86400 (24hr).\n  CookieMaxAge int `json:"cookie_max_age"`\n\n  // Indicates if CSRF cookie is secure.\n  // Optional. Default value false.\n  CookieSecure bool `json:"cookie_secure"`\n\n  // Indicates if CSRF cookie is HTTP only.\n  // Optional. Default value false.\n  CookieHTTPOnly bool `json:"cookie_http_only"`\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'DefaultCSRFConfig = CSRFConfig{\n  Skipper:      DefaultSkipper,\n  TokenLength:  32,\n  TokenLookup:  "header:" + echo.HeaderXCSRFToken,\n  ContextKey:   "csrf",\n  CookieName:   "_csrf",\n  CookieMaxAge: 86400,\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>r});var i=o(6540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);