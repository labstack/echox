"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1295],{8743:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"cookbook/http2","title":"HTTP/2 Server","description":"HTTP/2 server recipe","source":"@site/docs/cookbook/http2.md","sourceDirName":"cookbook","slug":"/cookbook/http2","permalink":"/docs/cookbook/http2","draft":false,"unlisted":false,"editUrl":"https://github.com/labstack/echox/blob/master/website/docs/cookbook/http2.md","tags":[],"version":"current","frontMatter":{"description":"HTTP/2 server recipe"},"sidebar":"docsSidebar","previous":{"title":"HTTP/2 Server Push","permalink":"/docs/cookbook/http2-server-push"},"next":{"title":"JSONP","permalink":"/docs/cookbook/jsonp"}}');var n=r(4848),s=r(8453);const c={description:"HTTP/2 server recipe"},i="HTTP/2 Server",a={},l=[{value:"1) Generate a self-signed X.509 TLS certificate",id:"1-generate-a-self-signed-x509-tls-certificate",level:2},{value:"2) Create a handler which simply outputs the request information to the client",id:"2-create-a-handler-which-simply-outputs-the-request-information-to-the-client",level:2},{value:"3) Start TLS server using cert.pem and key.pem",id:"3-start-tls-server-using-certpem-and-keypem",level:2},{value:"4) Start the server and browse to https://localhost:1323/request to see the following output",id:"4-start-the-server-and-browse-to-httpslocalhost1323request-to-see-the-following-output",level:2},{value:"Source Code",id:"source-code",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"http2-server",children:"HTTP/2 Server"})}),"\n",(0,n.jsx)(t.h2,{id:"1-generate-a-self-signed-x509-tls-certificate",children:"1) Generate a self-signed X.509 TLS certificate"}),"\n",(0,n.jsxs)(t.p,{children:["Run the following command to generate ",(0,n.jsx)(t.code,{children:"cert.pem"})," and ",(0,n.jsx)(t.code,{children:"key.pem"})," files:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"go run $GOROOT/src/crypto/tls/generate_cert.go --host localhost\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["For demo purpose, we are using a self-signed certificate. Ideally, you should obtain\na certificate from ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Certificate_authority",children:"CA"}),"."]})}),"\n",(0,n.jsx)(t.h2,{id:"2-create-a-handler-which-simply-outputs-the-request-information-to-the-client",children:"2) Create a handler which simply outputs the request information to the client"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",children:'e.GET("/request", func(c echo.Context) error {\n  req := c.Request()\n  format := `\n    <code>\n      Protocol: %s<br>\n      Host: %s<br>\n      Remote Address: %s<br>\n      Method: %s<br>\n      Path: %s<br>\n    </code>\n  `\n  return c.HTML(http.StatusOK, fmt.Sprintf(format, req.Proto, req.Host, req.RemoteAddr, req.Method, req.URL.Path))\n})\n'})}),"\n",(0,n.jsx)(t.h2,{id:"3-start-tls-server-using-certpem-and-keypem",children:"3) Start TLS server using cert.pem and key.pem"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",children:'if err := e.StartTLS(":1323", "cert.pem", "key.pem"); err != http.ErrServerClosed {\n  log.Fatal(err)\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"or use customized HTTP server with your own TLSConfig"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",children:'s := http.Server{\n  Addr:    ":8443",\n  Handler: e, // set Echo as handler\n  TLSConfig: &tls.Config{\n    //Certificates: nil, // <-- s.ListenAndServeTLS will populate this field\n  },\n  //ReadTimeout: 30 * time.Second, // use custom timeouts\n}\nif err := s.ListenAndServeTLS("cert.pem", "key.pem"); err != http.ErrServerClosed {\n  log.Fatal(err)\n}\n'})}),"\n",(0,n.jsxs)(t.h2,{id:"4-start-the-server-and-browse-to-httpslocalhost1323request-to-see-the-following-output",children:["4) Start the server and browse to ",(0,n.jsx)(t.a,{href:"https://localhost:1323/request",children:"https://localhost:1323/request"})," to see the following output"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sh",children:"Protocol: HTTP/2.0\nHost: localhost:1323\nRemote Address: [::1]:60288\nMethod: GET\nPath: /\n"})}),"\n",(0,n.jsx)(t.h2,{id:"source-code",children:"Source Code"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-go",metastring:"reference",children:"https://github.com/labstack/echox/blob/master/cookbook/http2/server.go\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>i});var o=r(6540);const n={},s=o.createContext(n);function c(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);