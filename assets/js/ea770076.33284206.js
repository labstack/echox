"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1676],{7466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"middleware/static","title":"Static","description":"Static middleware","source":"@site/docs/middleware/static.md","sourceDirName":"middleware","slug":"/middleware/static","permalink":"/docs/middleware/static","draft":false,"unlisted":false,"editUrl":"https://github.com/labstack/echox/blob/master/website/docs/middleware/static.md","tags":[],"version":"current","frontMatter":{"description":"Static middleware"},"sidebar":"docsSidebar","previous":{"title":"Session","permalink":"/docs/middleware/session"},"next":{"title":"Timeout","permalink":"/docs/middleware/timeout"}}');var s=n(4848),a=n(8453);const o={description:"Static middleware"},r="Static",l={},d=[{value:"Usage",id:"usage",level:2},{value:"Custom Configuration",id:"custom-configuration",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Example 1",id:"example-1",level:4},{value:"Example 2",id:"example-2",level:4},{value:"Configuration",id:"configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:3}];function c(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"static",children:"Static"})}),"\n",(0,s.jsx)(t.p,{children:"Static middleware can be used to serve static files from the provided root directory."}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'e := echo.New()\ne.Use(middleware.Static("/static"))\n'})}),"\n",(0,s.jsxs)(t.p,{children:["This serves static files from ",(0,s.jsx)(t.code,{children:"static"})," directory. For example, a request to ",(0,s.jsx)(t.code,{children:"/js/main.js"}),"\nwill fetch and serve ",(0,s.jsx)(t.code,{children:"static/js/main.js"})," file."]}),"\n",(0,s.jsx)(t.h2,{id:"custom-configuration",children:"Custom Configuration"}),"\n",(0,s.jsx)(t.h3,{id:"usage-1",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'e := echo.New()\ne.Use(middleware.StaticWithConfig(middleware.StaticConfig{\n  Root:   "static",\n  Browse: true,\n}))\n'})}),"\n",(0,s.jsxs)(t.p,{children:["This serves static files from ",(0,s.jsx)(t.code,{children:"static"})," directory and enables directory browsing."]}),"\n",(0,s.jsx)(t.p,{children:"Default behavior when using with non root URL paths is to append the URL path to the filesystem path."}),"\n",(0,s.jsx)(t.h4,{id:"example-1",children:"Example 1"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'group := root.Group("somepath")\ngroup.Use(middleware.Static(filepath.Join("filesystempath")))\n// When an incoming request comes for `/somepath` the actual filesystem request goes to `filesystempath/somepath` instead of only `filesystempath`. \n'})}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["To turn off this behavior set the ",(0,s.jsx)(t.code,{children:"IgnoreBase"})," config param to ",(0,s.jsx)(t.code,{children:"true"}),"."]})}),"\n",(0,s.jsx)(t.h4,{id:"example-2",children:"Example 2"}),"\n",(0,s.jsx)(t.p,{children:"Serve SPA assets from embedded filesystem"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'//go:embed web\nvar webAssets embed.FS\n\nfunc main() {\n\te := echo.New()\n\n\te.Use(middleware.StaticWithConfig(middleware.StaticConfig{\n\t\tHTML5:      true,\n\t\tRoot:       "web", // because files are located in `web` directory in `webAssets` fs\n\t\tFilesystem: http.FS(webAssets),\n\t}))\n\tapi := e.Group("/api")\n\tapi.GET("/users", func(c echo.Context) error {\n\t\treturn c.String(http.StatusOK, "users")\n\t})\n\n\tif err := e.Start(":8080"); err != nil && !errors.Is(err, http.ErrServerClosed) {\n\t\tlog.Fatal(err)\n\t}\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'StaticConfig struct {\n  // Skipper defines a function to skip middleware.\n  Skipper Skipper\n\n  // Root directory from where the static content is served.\n  // Required.\n  Root string `json:"root"`\n\n  // Index file for serving a directory.\n  // Optional. Default value "index.html".\n  Index string `json:"index"`\n\n  // Enable HTML5 mode by forwarding all not-found requests to root so that\n  // SPA (single-page application) can handle the routing.\n  // Optional. Default value false.\n  HTML5 bool `json:"html5"`\n\n  // Enable directory browsing.\n  // Optional. Default value false.\n  Browse bool `json:"browse"`\n  \n  // Enable ignoring of the base of the URL path.\n  // Example: when assigning a static middleware to a non root path group,\n  // the filesystem path is not doubled\n  // Optional. Default value false.\n  IgnoreBase bool `yaml:"ignoreBase"`\n\n  // Filesystem provides access to the static content.\n  // Optional. Defaults to http.Dir(config.Root)\n  Filesystem http.FileSystem `yaml:"-"`\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'DefaultStaticConfig = StaticConfig{\n  Skipper: DefaultSkipper,\n  Index:   "index.html",\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);