"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5818],{4086:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"guide/response","title":"Response","description":"Sending response","source":"@site/docs/guide/response.md","sourceDirName":"guide","slug":"/response","permalink":"/docs/response","draft":false,"unlisted":false,"editUrl":"https://github.com/labstack/echox/blob/master/website/docs/guide/response.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"description":"Sending response","slug":"/response","sidebar_position":9},"sidebar":"docsSidebar","previous":{"title":"Request","permalink":"/docs/request"},"next":{"title":"Routing","permalink":"/docs/routing"}}');var r=t(4848),c=t(8453);const d={description:"Sending response",slug:"/response",sidebar_position:9},o="Response",i={},l=[{value:"Send String",id:"send-string",level:2},{value:"Send HTML (Reference to templates)",id:"send-html-reference-to-templates",level:2},{value:"Send HTML Blob",id:"send-html-blob",level:3},{value:"Render Template",id:"render-template",level:2},{value:"Send JSON",id:"send-json",level:2},{value:"Stream JSON",id:"stream-json",level:3},{value:"JSON Pretty",id:"json-pretty",level:3},{value:"JSON Blob",id:"json-blob",level:3},{value:"Send JSONP",id:"send-jsonp",level:2},{value:"Send XML",id:"send-xml",level:2},{value:"Stream XML",id:"stream-xml",level:3},{value:"XML Pretty",id:"xml-pretty",level:3},{value:"XML Blob",id:"xml-blob",level:3},{value:"Send File",id:"send-file",level:2},{value:"Send Attachment",id:"send-attachment",level:2},{value:"Send Inline",id:"send-inline",level:2},{value:"Send Blob",id:"send-blob",level:2},{value:"Send Stream",id:"send-stream",level:2},{value:"Send No Content",id:"send-no-content",level:2},{value:"Redirect Request",id:"redirect-request",level:2},{value:"Hooks",id:"hooks",level:2},{value:"Before Response",id:"before-response",level:3},{value:"After Response",id:"after-response",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"response",children:"Response"})}),"\n",(0,r.jsx)(n.h2,{id:"send-string",children:"Send String"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#String(code int, s string)"})," can be used to send plain text response with status\ncode."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  return c.String(http.StatusOK, "Hello, World!")\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"send-html-reference-to-templates",children:"Send HTML (Reference to templates)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#HTML(code int, html string)"})," can be used to send simple HTML response with\nstatus code. If you are looking to send dynamically generate HTML see ",(0,r.jsx)(n.a,{href:"/docs/templates",children:"templates"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  return c.HTML(http.StatusOK, "<strong>Hello, World!</strong>")\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"send-html-blob",children:"Send HTML Blob"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#HTMLBlob(code int, b []byte)"})," can be used to send HTML blob with status\ncode. You may find it handy using with a template engine which outputs ",(0,r.jsx)(n.code,{children:"[]byte"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"render-template",children:"Render Template"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/templates",children:"Learn more"})}),"\n",(0,r.jsx)(n.h2,{id:"send-json",children:"Send JSON"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#JSON(code int, i interface{})"})," can be used to encode a provided Go type into\nJSON and send it as response with status code."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'// User\ntype User struct {\n  Name  string `json:"name" xml:"name"`\n  Email string `json:"email" xml:"email"`\n}\n\n// Handler\nfunc(c echo.Context) error {\n  u := &User{\n    Name:  "Jon",\n    Email: "jon@labstack.com",\n  }\n  return c.JSON(http.StatusOK, u)\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"stream-json",children:"Stream JSON"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#JSON()"})," internally uses ",(0,r.jsx)(n.code,{children:"json.Marshal"})," which may not be efficient to large JSON,\nin that case you can directly stream JSON."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  u := &User{\n    Name:  "Jon",\n    Email: "jon@labstack.com",\n  }\n  c.Response().Header().Set(echo.HeaderContentType, echo.MIMEApplicationJSONCharsetUTF8)\n  c.Response().WriteHeader(http.StatusOK)\n  return json.NewEncoder(c.Response()).Encode(u)\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"json-pretty",children:"JSON Pretty"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#JSONPretty(code int, i interface{}, indent string)"})," can be used to a send\na JSON response which is pretty printed based on indent, which could be spaces or tabs."]}),"\n",(0,r.jsx)(n.p,{children:"Example below sends a pretty print JSON indented with spaces:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  u := &User{\n    Name:  "Jon",\n    Email: "joe@labstack.com",\n  }\n  return c.JSONPretty(http.StatusOK, u, "  ")\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'{\n  "email": "joe@labstack.com",\n  "name": "Jon"\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["You can also use ",(0,r.jsx)(n.code,{children:"Context#JSON()"})," to output a pretty printed JSON (indented with spaces)\nby appending ",(0,r.jsx)(n.code,{children:"pretty"})," in the request URL query string."]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"curl http://localhost:1323/users/1?pretty\n"})}),"\n",(0,r.jsx)(n.h3,{id:"json-blob",children:"JSON Blob"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#JSONBlob(code int, b []byte)"})," can be used to send pre-encoded JSON blob directly\nfrom external source, for example, database."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func(c echo.Context) error {\n  encodedJSON := []byte{} // Encoded JSON from external source\n  return c.JSONBlob(http.StatusOK, encodedJSON)\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"send-jsonp",children:"Send JSONP"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#JSONP(code int, callback string, i interface{})"})," can be used to encode a provided\nGo type into JSON and send it as JSONP payload constructed using a callback, with\nstatus code."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/cookbook/jsonp",children:(0,r.jsx)(n.em,{children:"Example"})})}),"\n",(0,r.jsx)(n.h2,{id:"send-xml",children:"Send XML"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#XML(code int, i interface{})"})," can be used to encode a provided Go type into\nXML and send it as response with status code."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  u := &User{\n    Name:  "Jon",\n    Email: "jon@labstack.com",\n  }\n  return c.XML(http.StatusOK, u)\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"stream-xml",children:"Stream XML"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#XML"})," internally uses ",(0,r.jsx)(n.code,{children:"xml.Marshal"})," which may not be efficient to large XML,\nin that case you can directly stream XML."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  u := &User{\n    Name:  "Jon",\n    Email: "jon@labstack.com",\n  }\n  c.Response().Header().Set(echo.HeaderContentType, echo.MIMEApplicationXMLCharsetUTF8)\n  c.Response().WriteHeader(http.StatusOK)\n  return xml.NewEncoder(c.Response()).Encode(u)\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"xml-pretty",children:"XML Pretty"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#XMLPretty(code int, i interface{}, indent string)"})," can be used to a send\nan XML response which is pretty printed based on indent, which could be spaces or tabs."]}),"\n",(0,r.jsx)(n.p,{children:"Example below sends a pretty print XML indented with spaces:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  u := &User{\n    Name:  "Jon",\n    Email: "joe@labstack.com",\n  }\n  return c.XMLPretty(http.StatusOK, u, "  ")\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<User>\n  <Name>Jon</Name>\n  <Email>joe@labstack.com</Email>\n</User>\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["You can also use ",(0,r.jsx)(n.code,{children:"Context#XML()"})," to output a pretty printed XML (indented with spaces) by appending ",(0,r.jsx)(n.code,{children:"pretty"})," in the request URL query string."]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"curl http://localhost:1323/users/1?pretty\n"})}),"\n",(0,r.jsx)(n.h3,{id:"xml-blob",children:"XML Blob"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#XMLBlob(code int, b []byte)"})," can be used to send pre-encoded XML blob directly\nfrom external source, for example, database."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func(c echo.Context) error {\n  encodedXML := []byte{} // Encoded XML from external source\n  return c.XMLBlob(http.StatusOK, encodedXML)\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"send-file",children:"Send File"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#File(file string)"})," can be used to send the content of file as response.\nIt automatically sets the correct content type and handles caching gracefully."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  return c.File("<PATH_TO_YOUR_FILE>")\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"send-attachment",children:"Send Attachment"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#Attachment(file, name string)"})," is similar to ",(0,r.jsx)(n.code,{children:"File()"})," except that it is\nused to send file as ",(0,r.jsx)(n.code,{children:"Content-Disposition: attachment"})," with provided name."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  return c.Attachment("<PATH_TO_YOUR_FILE>", "<ATTACHMENT_NAME>")\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"send-inline",children:"Send Inline"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#Inline(file, name string)"})," is similar to ",(0,r.jsx)(n.code,{children:"File()"})," except that it is\nused to send file as ",(0,r.jsx)(n.code,{children:"Content-Disposition: inline"})," with provided name."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  return c.Inline("<PATH_TO_YOUR_FILE>")\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"send-blob",children:"Send Blob"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#Blob(code int, contentType string, b []byte)"})," can be used to send an arbitrary\ndata response with provided content type and status code."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) (err error) {\n  data := []byte(`0306703,0035866,NO_ACTION,06/19/2006\n\t  0086003,"0005866",UPDATED,06/19/2006`)\n\treturn c.Blob(http.StatusOK, "text/csv", data)\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"send-stream",children:"Send Stream"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#Stream(code int, contentType string, r io.Reader)"})," can be used to send an\narbitrary data stream response with provided content type, ",(0,r.jsx)(n.code,{children:"io.Reader"})," and status\ncode."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  f, err := os.Open("<PATH_TO_IMAGE>")\n  if err != nil {\n    return err\n  }\n  defer f.Close()\n  return c.Stream(http.StatusOK, "image/png", f)\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"send-no-content",children:"Send No Content"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#NoContent(code int)"})," can be used to send empty body with status code."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"func(c echo.Context) error {\n  return c.NoContent(http.StatusOK)\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"redirect-request",children:"Redirect Request"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#Redirect(code int, url string)"})," can be used to redirect the request to\na provided URL with status code."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  return c.Redirect(http.StatusMovedPermanently, "<URL>")\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"hooks",children:"Hooks"}),"\n",(0,r.jsx)(n.h3,{id:"before-response",children:"Before Response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#Response#Before(func())"})," can be used to register a function which is called just before the response is written."]}),"\n",(0,r.jsx)(n.h3,{id:"after-response",children:"After Response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Context#Response#After(func())"}),' can be used to register a function which is called just\nafter the response is written. If the "Content-Length" is unknown, none of the after\nfunction is executed.']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Example"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func(c echo.Context) error {\n  c.Response().Before(func() {\n    println("before response")\n  })\n  c.Response().After(func() {\n    println("after response")\n  })\n  return c.NoContent(http.StatusNoContent)\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"It is possible to register multiple Before and After functions."})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var s=t(6540);const r={},c=s.createContext(r);function d(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);