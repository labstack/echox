"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6270],{9306:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"middleware/body-limit","title":"Body Limit","description":"Body limit middleware","source":"@site/docs/middleware/body-limit.md","sourceDirName":"middleware","slug":"/middleware/body-limit","permalink":"/docs/middleware/body-limit","draft":false,"unlisted":false,"editUrl":"https://github.com/labstack/echox/blob/master/website/docs/middleware/body-limit.md","tags":[],"version":"current","frontMatter":{"description":"Body limit middleware"},"sidebar":"docsSidebar","previous":{"title":"Body Dump","permalink":"/docs/middleware/body-dump"},"next":{"title":"Casbin Auth","permalink":"/docs/middleware/casbin-auth"}}');var o=n(4848),d=n(8453);const r={description:"Body limit middleware"},s="Body Limit",a={},l=[{value:"Usage",id:"usage",level:2},{value:"Custom Configuration",id:"custom-configuration",level:2},{value:"Usage",id:"usage-1",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:3}];function c(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"body-limit",children:"Body Limit"})}),"\n",(0,o.jsxs)(i.p,{children:['Body limit middleware sets the maximum allowed size for a request body, if the\nsize exceeds the configured limit, it sends "413 - Request Entity Too Large"\nresponse. The body limit is determined based on both ',(0,o.jsx)(i.code,{children:"Content-Length"})," request\nheader and actual content read, which makes it super secure."]}),"\n",(0,o.jsxs)(i.p,{children:["Limit can be specified as ",(0,o.jsx)(i.code,{children:"4x"})," or ",(0,o.jsx)(i.code,{children:"4xB"}),", where x is one of the multiple from K, M,\nG, T or P."]}),"\n",(0,o.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-go",children:'e := echo.New()\ne.Use(middleware.BodyLimit("2M"))\n'})}),"\n",(0,o.jsx)(i.h2,{id:"custom-configuration",children:"Custom Configuration"}),"\n",(0,o.jsx)(i.h3,{id:"usage-1",children:"Usage"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-go",children:"e := echo.New()\ne.Use(middleware.BodyLimitWithConfig(middleware.BodyLimitConfig{}))\n"})}),"\n",(0,o.jsx)(i.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-go",children:'BodyLimitConfig struct {\n  // Skipper defines a function to skip middleware.\n  Skipper Skipper\n\n  // Maximum allowed size for a request body, it can be specified\n  // as `4x` or `4xB`, where x is one of the multiple from K, M, G, T or P.\n  Limit string `json:"limit"`\n}\n'})}),"\n",(0,o.jsx)(i.h3,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-go",children:"DefaultBodyLimitConfig = BodyLimitConfig{\n  Skipper: DefaultSkipper,\n}\n"})})]})}function u(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>s});var t=n(6540);const o={},d=t.createContext(o);function r(e){const i=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(d.Provider,{value:i},e.children)}}}]);