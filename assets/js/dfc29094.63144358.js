"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8602],{7993:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"guide/routing","title":"Routing","description":"Routing requests","source":"@site/docs/guide/routing.md","sourceDirName":"guide","slug":"/routing","permalink":"/docs/routing","draft":false,"unlisted":false,"editUrl":"https://github.com/labstack/echox/blob/master/website/docs/guide/routing.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"description":"Routing requests","slug":"/routing","sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"Response","permalink":"/docs/response"},"next":{"title":"Static Files","permalink":"/docs/static-files"}}');var i=r(4848),t=r(8453);const a={description:"Routing requests",slug:"/routing",sidebar_position:10},d="Routing",l={},o=[{value:"HTTP Methods",id:"http-methods",level:2},{value:"Available HTTP Methods",id:"available-http-methods",level:3},{value:"Method Parameters",id:"method-parameters",level:3},{value:"Handler Function Signature",id:"handler-function-signature",level:3},{value:"Example Usage",id:"example-usage",level:3},{value:"Route Registration Methods",id:"route-registration-methods",level:2},{value:"Echo.Any()",id:"echoany",level:3},{value:"Echo.Match()",id:"echomatch",level:3},{value:"Route Parameters",id:"route-parameters",level:2},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Form Parameters",id:"form-parameters",level:3},{value:"Match-any / wildcard",id:"match-any--wildcard",level:2},{value:"Path Matching Order",id:"path-matching-order",level:2},{value:"Example",id:"example",level:3},{value:"Group",id:"group",level:2},{value:"Basic Group Usage",id:"basic-group-usage",level:3},{value:"Group with Middleware",id:"group-with-middleware",level:3},{value:"Advanced Group Examples",id:"advanced-group-examples",level:3},{value:"Group Middleware Management",id:"group-middleware-management",level:3},{value:"Practical Example: RESTful API Structure",id:"practical-example-restful-api-structure",level:3},{value:"Group Benefits",id:"group-benefits",level:3},{value:"Route Naming",id:"route-naming",level:2},{value:"Basic Route Naming",id:"basic-route-naming",level:3},{value:"Advanced Route Naming",id:"advanced-route-naming",level:3},{value:"URI Building",id:"uri-building",level:2},{value:"Echo.URI() - Handler-based URI Generation",id:"echouri---handler-based-uri-generation",level:3},{value:"Echo.Reverse() - Name-based URI Generation",id:"echoreverse---name-based-uri-generation",level:3},{value:"Practical Examples",id:"practical-examples",level:3},{value:"Benefits of Route Naming",id:"benefits-of-route-naming",level:3},{value:"List Routes",id:"list-routes",level:2},{value:"Example: Listing Routes",id:"example-listing-routes",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"routing",children:"Routing"})}),"\n",(0,i.jsxs)(n.p,{children:["Echo's router is based on ",(0,i.jsx)(n.a,{href:"http://en.wikipedia.org/wiki/Radix_tree",children:"radix tree"}),", making\nroute lookup really fast. It leverages ",(0,i.jsx)(n.a,{href:"https://golang.org/pkg/sync/#Pool",children:"sync pool"}),"\nto reuse memory and achieve zero dynamic memory allocation with no GC overhead."]}),"\n",(0,i.jsxs)(n.p,{children:["Routes can be registered by specifying HTTP method, path and a matching handler.\nFor example, code below registers a route for method ",(0,i.jsx)(n.code,{children:"GET"}),", path ",(0,i.jsx)(n.code,{children:"/hello"})," and a\nhandler which sends ",(0,i.jsx)(n.code,{children:"Hello, World!"})," HTTP response."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Handler\nfunc hello(c echo.Context) error {\n    return c.String(http.StatusOK, "Hello, World!")\n}\n\n// Route\ne.GET("/hello", hello)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"http-methods",children:"HTTP Methods"}),"\n",(0,i.jsxs)(n.p,{children:["Echo supports all standard HTTP methods. Each method follows the signature:\n",(0,i.jsx)(n.code,{children:"e.METHOD(path string, h HandlerFunc, middleware ...Middleware) *Route"})]}),"\n",(0,i.jsx)(n.h3,{id:"available-http-methods",children:"Available HTTP Methods"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Signature"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"GET"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"e.GET(path, handler, ...middleware)"})}),(0,i.jsx)(n.td,{children:"Retrieve data"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"POST"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"e.POST(path, handler, ...middleware)"})}),(0,i.jsx)(n.td,{children:"Create new resource"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PUT"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"e.PUT(path, handler, ...middleware)"})}),(0,i.jsx)(n.td,{children:"Update entire resource"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PATCH"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"e.PATCH(path, handler, ...middleware)"})}),(0,i.jsx)(n.td,{children:"Partial update of resource"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"DELETE"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"e.DELETE(path, handler, ...middleware)"})}),(0,i.jsx)(n.td,{children:"Remove resource"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"HEAD"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"e.HEAD(path, handler, ...middleware)"})}),(0,i.jsx)(n.td,{children:"Get headers only"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"OPTIONS"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"e.OPTIONS(path, handler, ...middleware)"})}),(0,i.jsx)(n.td,{children:"Get allowed methods"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"method-parameters",children:"Method Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"path"})})," (string): The route pattern (e.g., ",(0,i.jsx)(n.code,{children:"/users/:id"}),", ",(0,i.jsx)(n.code,{children:"/api/*"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"handler"})})," (HandlerFunc): Function that handles the request"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"middleware"})})," (...Middleware): Optional middleware functions"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"handler-function-signature",children:"Handler Function Signature"}),"\n",(0,i.jsxs)(n.p,{children:["Echo defines handler functions as ",(0,i.jsx)(n.code,{children:"func(echo.Context) error"})," where:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"echo.Context"})}),": Provides access to:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Request and response objects"}),"\n",(0,i.jsxs)(n.li,{children:["Path parameters (",(0,i.jsx)(n.code,{children:'c.Param("id")'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Query parameters (",(0,i.jsx)(n.code,{children:'c.QueryParam("name")'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Form data (",(0,i.jsx)(n.code,{children:'c.FormValue("field")'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["JSON binding (",(0,i.jsx)(n.code,{children:"c.Bind(&struct{})"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Response helpers (",(0,i.jsx)(n.code,{children:"c.JSON()"}),", ",(0,i.jsx)(n.code,{children:"c.String()"}),", etc.)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// GET request\ne.GET("/users/:id", getUser)\n\n// POST request with JSON body\ne.POST("/users", createUser)\n\n// PUT request for updates\ne.PUT("/users/:id", updateUser)\n\n// DELETE request\ne.DELETE("/users/:id", deleteUser)\n\n// PATCH request for partial updates\ne.PATCH("/users/:id", patchUser)\n\n// HEAD request (same as GET but without body)\ne.HEAD("/users/:id", getUser)\n\n// OPTIONS request for CORS\ne.OPTIONS("/users", handleOptions)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"route-registration-methods",children:"Route Registration Methods"}),"\n",(0,i.jsxs)(n.p,{children:["You can use ",(0,i.jsx)(n.code,{children:"Echo.Any(path string, h Handler)"})," to register a handler for all HTTP methods.\nIf you want to register it for some methods use ",(0,i.jsx)(n.code,{children:"Echo.Match(methods []string, path string, h Handler)"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"echoany",children:"Echo.Any()"}),"\n",(0,i.jsx)(n.p,{children:"Registers a handler for all HTTP methods on a given path:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'e.Any("/api/*", func(c echo.Context) error {\n    return c.String(http.StatusOK, "Handles all methods")\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"echomatch",children:"Echo.Match()"}),"\n",(0,i.jsx)(n.p,{children:"Registers a handler for specific HTTP methods:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Handle both GET and POST\ne.Match([]string{"GET", "POST"}, "/users", userHandler)\n\n// Handle multiple methods\ne.Match([]string{"PUT", "PATCH"}, "/users/:id", updateHandler)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"route-parameters",children:"Route Parameters"}),"\n",(0,i.jsx)(n.p,{children:"Echo supports various types of route parameters for flexible URL patterns."}),"\n",(0,i.jsx)(n.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["Path parameters are defined using ",(0,i.jsx)(n.code,{children:":paramName"})," syntax and can be accessed in handlers using ",(0,i.jsx)(n.code,{children:'c.Param("paramName")'}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Single parameter\ne.GET("/users/:id", func(c echo.Context) error {\n    id := c.Param("id")\n    return c.String(http.StatusOK, "User ID: " + id)\n})\n\n// Multiple parameters\ne.GET("/users/:id/posts/:postId", func(c echo.Context) error {\n    userId := c.Param("id")\n    postId := c.Param("postId")\n    return c.String(http.StatusOK, "User: " + userId + ", Post: " + postId)\n})\n\n// Optional parameters (using query parameters instead)\ne.GET("/users", func(c echo.Context) error {\n    id := c.QueryParam("id") // Optional\n    return c.String(http.StatusOK, "User ID: " + id)\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["Query parameters are accessed using ",(0,i.jsx)(n.code,{children:'c.QueryParam("name")'})," and are optional by nature:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'e.GET("/search", func(c echo.Context) error {\n    query := c.QueryParam("q")\n    limit := c.QueryParam("limit")\n    return c.String(http.StatusOK, "Search: " + query + ", Limit: " + limit)\n})\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example URLs:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/search?q=golang&limit=10"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/users/123?include=posts&limit=5"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"form-parameters",children:"Form Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["For POST/PUT requests with form data, use ",(0,i.jsx)(n.code,{children:'c.FormValue("field")'}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'e.POST("/users", func(c echo.Context) error {\n    name := c.FormValue("name")\n    email := c.FormValue("email")\n    return c.String(http.StatusOK, "Name: " + name + ", Email: " + email)\n})\n'})}),"\n",(0,i.jsx)(n.h2,{id:"match-any--wildcard",children:"Match-any / wildcard"}),"\n",(0,i.jsxs)(n.p,{children:["Matches zero or more characters in the path. For example, pattern ",(0,i.jsx)(n.code,{children:"/users/*"})," will\nmatch:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/users/"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/users/1"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/users/1/files/1"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/users/anything..."})}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["There can be only one effective match-any parameter in route. When route is added with multiple match-any\n",(0,i.jsx)(n.code,{children:"/v1/*/images/*"}),". The router matches always the first ",(0,i.jsx)(n.code,{children:"*"})," till the end of request URL i.e. it works as ",(0,i.jsx)(n.code,{children:"/v1/*"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"path-matching-order",children:"Path Matching Order"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Static"}),"\n",(0,i.jsx)(n.li,{children:"Param"}),"\n",(0,i.jsx)(n.li,{children:"Match any"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'e.GET("/users/:id", func(c echo.Context) error {\n    return c.String(http.StatusOK, "/users/:id")\n})\n\ne.GET("/users/new", func(c echo.Context) error {\n    return c.String(http.StatusOK, "/users/new")\n})\n\ne.GET("/users/1/files/*", func(c echo.Context) error {\n    return c.String(http.StatusOK, "/users/1/files/*")\n})\n'})}),"\n",(0,i.jsx)(n.p,{children:"Above routes would resolve in the following order:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/users/new"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/users/:id"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"/users/1/files/*"})}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Routes can be written in any order."})}),"\n",(0,i.jsx)(n.h2,{id:"group",children:"Group"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"Echo#Group(prefix string, m ...Middleware) *Group"})}),"\n",(0,i.jsxs)(n.p,{children:["Routes with common prefix can be grouped to define a new sub-router with optional\nmiddleware. In addition to specified middleware group also inherits parent middleware.\nTo add middleware later in the group you can use ",(0,i.jsx)(n.code,{children:"Group.Use(m ...Middleware)"}),".\nGroups can also be nested."]}),"\n",(0,i.jsx)(n.h3,{id:"basic-group-usage",children:"Basic Group Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Create a group with prefix\napi := e.Group("/api")\n\n// Add routes to the group\napi.GET("/users", getUsers)\napi.POST("/users", createUser)\napi.GET("/users/:id", getUser)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"group-with-middleware",children:"Group with Middleware"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Admin group with authentication\nadmin := e.Group("/admin")\nadmin.Use(middleware.BasicAuth(func(username, password string, c echo.Context) (bool, error) {\n    if username == "joe" && password == "secret" {\n        return true, nil\n    }\n    return false, nil\n}))\n\n// All routes under /admin/* will require authentication\nadmin.GET("/dashboard", dashboard)\nadmin.GET("/users", adminUsers)\nadmin.POST("/users", createUser)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-group-examples",children:"Advanced Group Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// API v1 group with logging and CORS\napiV1 := e.Group("/api/v1")\napiV1.Use(middleware.Logger())\napiV1.Use(middleware.CORS())\n\napiV1.GET("/users", getUsers)\napiV1.POST("/users", createUser)\n\n// API v2 group with different middleware\napiV2 := e.Group("/api/v2")\napiV2.Use(middleware.Logger())\napiV2.Use(middleware.CORS())\napiV2.Use(middleware.RateLimiter(middleware.NewRateLimiterMemoryStore(20)))\n\napiV2.GET("/users", getUsersV2)\napiV2.POST("/users", createUserV2)\n\n// Nested groups\nadmin := e.Group("/admin")\nadmin.Use(middleware.BasicAuth(...))\n\n// Admin users sub-group\nadminUsers := admin.Group("/users")\nadminUsers.Use(middleware.RoleBasedAuth("admin"))\nadminUsers.GET("/", listUsers)\nadminUsers.POST("/", createUser)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"group-middleware-management",children:"Group Middleware Management"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Create group without initial middleware\napi := e.Group("/api")\n\n// Add middleware later\napi.Use(middleware.Logger())\napi.Use(middleware.Recover())\n\n// Add routes\napi.GET("/health", healthCheck)\napi.GET("/users", getUsers)\n\n// Add more middleware to specific routes\napi.GET("/sensitive", sensitiveHandler, middleware.AuthRequired())\n'})}),"\n",(0,i.jsx)(n.h3,{id:"practical-example-restful-api-structure",children:"Practical Example: RESTful API Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'func setupRoutes(e *echo.Echo) {\n    // Public routes\n    e.GET("/", homeHandler)\n    e.GET("/login", loginPage)\n    e.POST("/login", loginHandler)\n\n    // API group with common middleware\n    api := e.Group("/api")\n    api.Use(middleware.Logger())\n    api.Use(middleware.Recover())\n    api.Use(middleware.CORS())\n\n    // Public API routes\n    api.GET("/health", healthCheck)\n    api.POST("/register", registerUser)\n\n    // Protected API routes\n    protected := api.Group("")\n    protected.Use(middleware.JWT([]byte("secret")))\n\n    protected.GET("/users", getUsers)\n    protected.POST("/users", createUser)\n    protected.GET("/users/:id", getUser)\n    protected.PUT("/users/:id", updateUser)\n    protected.DELETE("/users/:id", deleteUser)\n\n    // Admin API routes\n    admin := protected.Group("/admin")\n    admin.Use(middleware.RoleBasedAuth("admin"))\n\n    admin.GET("/stats", getStats)\n    admin.POST("/users/:id/ban", banUser)\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"group-benefits",children:"Group Benefits"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Middleware Inheritance"}),": Groups inherit parent middleware"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"URL Organization"}),": Logical grouping of related routes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Middleware Reuse"}),": Apply common middleware to multiple routes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Nested Structure"}),": Create hierarchical route structures"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Easy Maintenance"}),": Modify group middleware affects all routes"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"route-naming",children:"Route Naming"}),"\n",(0,i.jsxs)(n.p,{children:["Each of the registration methods returns a ",(0,i.jsx)(n.code,{children:"Route"})," object, which can be used to name a route after the registration. Route names are useful for generating URIs from templates, avoiding hardcoded URLs, and when you have multiple routes with the same handler."]}),"\n",(0,i.jsx)(n.h3,{id:"basic-route-naming",children:"Basic Route Naming"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Method 1: Assign name after registration\nroute := e.POST("/users", createUser)\nroute.Name = "create-user"\n\n// Method 2: Inline syntax\ne.GET("/users/:id", getUser).Name = "get-user"\ne.PUT("/users/:id", updateUser).Name = "update-user"\ne.DELETE("/users/:id", deleteUser).Name = "delete-user"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-route-naming",children:"Advanced Route Naming"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Multiple parameters\ne.GET("/users/:id/posts/:postId", getPost).Name = "get-user-post"\n\n// Nested routes\ne.GET("/api/v1/users/:id", getUser).Name = "api-get-user"\ne.GET("/api/v2/users/:id", getUserV2).Name = "api-get-user-v2"\n\n// Group routes with names\nadmin := e.Group("/admin")\nadmin.GET("/dashboard", dashboard).Name = "admin-dashboard"\nadmin.GET("/users", adminUsers).Name = "admin-users"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"uri-building",children:"URI Building"}),"\n",(0,i.jsxs)(n.p,{children:["Echo provides two methods for generating URIs: ",(0,i.jsx)(n.code,{children:"Echo.URI()"})," and ",(0,i.jsx)(n.code,{children:"Echo.Reverse()"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"echouri---handler-based-uri-generation",children:"Echo.URI() - Handler-based URI Generation"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Echo.URI(handler HandlerFunc, params ...interface{})"})," generates URIs based on handler functions:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Define handlers\nfunc getUser(c echo.Context) error {\n    return c.String(http.StatusOK, "User")\n}\n\nfunc getUserPost(c echo.Context) error {\n    return c.String(http.StatusOK, "User Post")\n}\n\n// Register routes\ne.GET("/users/:id", getUser)\ne.GET("/users/:id/posts/:postId", getUserPost)\n\n// Generate URIs\nuserURI := e.URI(getUser, 123)                    // "/users/123"\npostURI := e.URI(getUserPost, 123, 456)          // "/users/123/posts/456"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"echoreverse---name-based-uri-generation",children:"Echo.Reverse() - Name-based URI Generation"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Echo.Reverse(name string, params ...interface{})"})," generates URIs based on route names:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Register named routes\ne.GET("/users/:id", getUser).Name = "get-user"\ne.GET("/users/:id/posts/:postId", getUserPost).Name = "get-user-post"\ne.GET("/api/v1/users/:id", getUser).Name = "api-user"\n\n// Generate URIs using names\nuserURI := e.Reverse("get-user", 123)             // "/users/123"\npostURI := e.Reverse("get-user-post", 123, 456)  // "/users/123/posts/456"\napiURI := e.Reverse("api-user", 123)             // "/api/v1/users/123"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"practical-examples",children:"Practical Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// In templates or handlers\nfunc generateUserLinks(userID int) map[string]string {\n    return map[string]string{\n        "profile": e.Reverse("get-user", userID),\n        "edit":    e.Reverse("update-user", userID),\n        "delete":  e.Reverse("delete-user", userID),\n    }\n}\n\n// In middleware for redirects\nfunc redirectToUser(c echo.Context) error {\n    userID := c.Param("id")\n    return c.Redirect(http.StatusFound, e.Reverse("get-user", userID))\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"benefits-of-route-naming",children:"Benefits of Route Naming"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"URL Centralization"}),": Change URLs in one place"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Template Integration"}),": Generate links in HTML templates"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Refactoring Safety"}),": Rename handlers without breaking links"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API Documentation"}),": Generate API documentation with correct URLs"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"list-routes",children:"List Routes"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Echo#Routes() []*Route"})," can be used to list all registered routes in the order\nthey are defined. Each route contains HTTP method, path and an associated handler."]}),"\n",(0,i.jsx)(n.h3,{id:"example-listing-routes",children:"Example: Listing Routes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'// Handlers\nfunc createUser(c echo.Context) error {\n}\n\nfunc findUser(c echo.Context) error {\n}\n\nfunc updateUser(c echo.Context) error {\n}\n\nfunc deleteUser(c echo.Context) error {\n}\n\n// Routes\ne.POST("/users", createUser)\ne.GET("/users", findUser)\ne.PUT("/users", updateUser)\ne.DELETE("/users", deleteUser)\n'})}),"\n",(0,i.jsx)(n.p,{children:"Using the following code you can output all the routes to a JSON file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'data, err := json.MarshalIndent(e.Routes(), "", "  ")\nif err != nil {\n    return err\n}\nos.WriteFile("routes.json", data, 0644)\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"routes.json"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'[\n  {\n    "method": "POST",\n    "path": "/users",\n    "name": "main.createUser"\n  },\n  {\n    "method": "GET",\n    "path": "/users",\n    "name": "main.findUser"\n  },\n  {\n    "method": "PUT",\n    "path": "/users",\n    "name": "main.updateUser"\n  },\n  {\n    "method": "DELETE",\n    "path": "/users",\n    "name": "main.deleteUser"\n  }\n]\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>d});var s=r(6540);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);